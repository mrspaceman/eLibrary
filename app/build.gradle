apply plugin: "com.android.application"

apply plugin: ("kotlin-android")
apply plugin: ("kotlin-android-extensions")
apply plugin: ("kotlin-kapt")

final BUILD_DATE = new Date().format('yyyy_MM_dd_HHmm')

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd-HH_mm_ss')
    return formattedDate
}

task dumpdebug {
    println('dumpdebug - Config Phase')
    print "name         :"
    println name
    print "path         :"
    println path
    print "description  :"
    println description
    print "projectDir   :"
    println projectDir
    print "buildDir     :"
    println buildDir
    print "group        :"
    println group
    print "version      :"
    println version
    print "project.name :"
    println project.name

    logger.quiet("An info log message which is always logged.")
    logger.error("An error log message.")
    logger.warn("A warning log message.")
    logger.lifecycle("A lifecycle info log message.")
    logger.info("An info log message.")
    logger.debug("A debug log message.")
    logger.trace("A trace log message.")
}

task timenow {
    println('timenow - Config Phase')
    dependsOn dumpdebug
    doFirst {
        println('doFirst Phase')
    }
    doLast {
        println('dolast Phase')
        println('Date is : ' + getDate())
    }
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "uk.co.droidinactu.elibrary"
        minSdkVersion 26
        targetSdkVersion 27
        versionCode 1
        versionName "${elibraryPrjVersion}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BUILD_TIME", "\"${BUILD_DATE}\"")
            resValue("string", "build_time", "${BUILD_DATE}")
        }
        debug {
            // Use static values for incremental builds to ensure that
            // resource files and BuildConfig aren't rebuilt with each run.
            // If they were dynamic, they would prevent certain benefits of
            // Instant Run as well as Gradle UP-TO-DATE checks.
            buildConfigField("String", "BUILD_TIME", "\"${BUILD_DATE}\"")
            resValue("string", "build_time", "${BUILD_DATE}")
        }
    }
    compileOptions {
        sourceCompatibility '1.8'
        targetCompatibility '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/spring.handlers'
        exclude 'META-INF/spring.schemas'
        exclude 'META-INF/blueprint.handlers'
        exclude 'META-INF/cxf/bus-extensions.txt'
    }
    buildToolsVersion = '28.0.3'
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(":ebooklibrary")

    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion")
    implementation('androidx.appcompat:appcompat:1.1.0-alpha04')
    implementation('androidx.core:core-ktx:1.1.0-alpha05')
    implementation("androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion")
    implementation("com.google.android.material:material:$rootProject.materialVersion")
    implementation("androidx.appcompat:appcompat:$rootProject.appCompatVersion")
    implementation("androidx.recyclerview:recyclerview:$rootProject.recyclerVersion")

    implementation 'com.google.firebase:firebase-auth:17.0.0'
    implementation 'com.google.firebase:firebase-ads:17.2.0'

    implementation 'com.firebaseui:firebase-ui-auth:4.3.1'

//    // Required only if Facebook login support is required
//    // Find the latest Facebook SDK releases here: https://goo.gl/Ce5L94
//    implementation 'com.facebook.android:facebook-android-sdk:4.x'
//
//    // Required only if Twitter login support is required
//    // Find the latest Twitter SDK releases here: https://goo.gl/E5wZvQ
//    implementation 'com.twitter.sdk.android:twitter-core:3.x'

    testImplementation('junit:junit:4.13-beta-2')
    androidTestImplementation('androidx.test.ext:junit:1.1.1-alpha05')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0-alpha05')

    implementation("androidx.cardview:cardview:1.0.0")
    implementation('androidx.recyclerview:recyclerview:1.1.0-alpha04')

    // Kotlin KTX + coroutines
    implementation("android.arch.work:work-runtime-ktx:$rootProject.androidWorkVersion")

    implementation("android.arch.navigation:navigation-fragment:1.0.0")
    implementation("android.arch.navigation:navigation-ui:1.0.0")

    implementation("org.jetbrains.anko:anko:0.10.8")

    implementation("org.apache.commons:commons-io:1.3.2")
    implementation('org.apache.commons:commons-csv:1.6')
    implementation('org.apache.commons:commons-lang3:3.9')

    implementation("joda-time:joda-time:2.9.4")

    implementation 'org.slf4j:slf4j-api:1.8.0-beta4'
    implementation 'com.github.tony19:logback-android:2.0.0'

    implementation("com.github.bmelnychuk:atv:1.2.+")
    implementation("com.github.angads25:filepicker:1.0.2")

    implementation 'com.google.firebase:firebase-core:16.0.9'
}

configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}

apply plugin: 'com.google.gms.google-services'
